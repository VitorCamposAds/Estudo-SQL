MÓDULO 12 - EXERCÍCIOS

/*1. a) A partir da tabela DimProduct, crie uma View contendo as informações de
ProductName, ColorName, UnitPrice e UnitCost, da tabela DimProduct. Chame essa View
de vwProdutos.
b) A partir da tabela DimEmployee, crie uma View mostrando FirstName, BirthDate,
DepartmentName. Chame essa View de vwFuncionarios.
c) A partir da tabela DimStore, crie uma View mostrando StoreKey, StoreName e
OpenDate. Chame essa View de vwLojas. */

--A)

SELECT * FROM DimProduct

GO

CREATE VIEW vwProdutos AS 
SELECT
	ProductName,
	ColorName,
	UnitPrice,
	UnitCost
FROM
	DimProduct
GO

SELECT * FROM vwProdutos

DROP VIEW vwProdutos

-- B)

GO
CREATE VIEW vwFuncionarios AS
SELECT
	FirstName, 
	BirthDate,
	DepartmentName
FROM
	DimEmployee
GO



SELECT * FROM vwFuncionarios
DROP VIEW vwFuncionarios

-- C)

GO
CREATE VIEW vwLojas AS
SELECT
	StoreKey, 
	StoreName,
	OpenDate
FROM
	DimStore
GO
	
SELECT * FROM vwLojas

DROP VIEW vwLojas

/* 2. Crie uma View contendo as informações de Nome Completo (FirstName +
LastName), Gênero (por extenso), E-mail e Renda Anual (formatada com R$).
Utilize a tabela DimCustomer. Chame essa View de vwClientes. */


GO
CREATE VIEW vwClientes AS
SELECT
	CONCAT(FirstName, ' ', LastName) AS 'Nome Completo',
	EmailAddress AS 'E-mail',
	FORMAT(YearlyIncome, 'C', 'pt-BR') AS 'Renda Anual',
	REPLACE(REPLACE(Gender, 'M', 'Masculino'), 'F', 'Feminino') AS 'Sexo'
FROM
	DimCustomer
GO

SELECT * FROM vwClientes

DROP VIEW vwClientes

/*3. a) A partir da tabela DimStore, crie uma View que considera apenas as lojas ativas. Faça
um SELECT de todas as colunas. Chame essa View de vwLojasAtivas.
b) A partir da tabela DimEmployee, crie uma View de uma tabela que considera apenas os
funcionários da área de Marketing. Faça um SELECT das colunas: FirstName, EmailAddress
e DepartmentName. Chame essa de vwFuncionariosMkt.
c) Crie uma View de uma tabela que considera apenas os produtos das marcas Contoso e
Litware. Além disso, a sua View deve considerar apenas os produtos de cor Silver. Faça
um SELECT de todas as colunas da tabela DimProduct. Chame essa View de
vwContosoLitwareSilver. */

-- A)


GO
CREATE VIEW vwLojasAtivas AS
SELECT * FROM DimStore
WHERE Status = 'On'
GO

SELECT * FROM vwLojasAtivas

DROP VIEW vwLojasAtivas


-- B)

SELECT* FROM DimEmployee

GO
CREATE VIEW vwFuncionariosMkt AS
SELECT
	CONCAT(FirstName, ' ', LastName) AS 'Nome_Completo',
	EmailAddress AS 'EMAIL',
	DepartmentName AS 'Departamento'
FROM
	DimEmployee
WHERE DepartmentName = 'Marketing'
GO

SELECT * FROM vwFuncionariosMkt

-- C) 

GO
CREATE VIEW vwContosoLitwareSilver AS
SELECT * FROM DimProduct
WHERE BrandName IN ('Contoso', 'Litware') AND ColorName = 'Silver'
GO

SELECT * FROM vwContosoLitwareSilver

DROP VIEW vwContosoLitwareSilver

/*4. Crie uma View que seja o resultado de um agrupamento da tabela FactSales. Este
agrupamento deve considerar o SalesQuantity (Quantidade Total Vendida) por Nome do
Produto. Chame esta View de vwTotalVendidoProdutos.
OBS: Para isso, você terá que utilizar um JOIN para relacionar as tabelas FactSales e
DimProduct. */

SELECT TOP (100)* FROM FactSales
SELECT * FROM DimProduct

GO
CREATE VIEW vwTotalVendidoProdutos AS
SELECT
	SUM(SalesQuantity) AS 'Quantidade_Total_Vendida',
	ProductName AS 'Nome_Do_Produto'
FROM
	FactSales
INNER JOIN DimProduct
		ON FactSales.ProductKey = DimProduct.ProductKey
GROUP BY ProductName
GO

SELECT * FROM vwTotalVendidoProdutos
ORDER BY 'Quantidade_Total_Vendida'  DESC

DROP VIEW vwTotalVendidoProdutos

/* 5. Faça as seguintes alterações nas tabelas da questão 1.
a. Na View criada na letra a da questão 1, adicione a coluna de BrandName. 
b. Na View criada na letra b da questão 1, faça um filtro e considere apenas os
funcionários do sexo feminino.
c. Na View criada na letra c da questão 1, faça uma alteração e filtre apenas as lojas ativas */

-- A)
GO
ALTER VIEW vwProdutos AS
SELECT
	ProductName AS 'Nome Produto',
	ColorName AS 'Cor',
	UnitPrice AS 'Preço Unitário',
	UnitCost AS 'Custo Unitário',
	BrandName AS 'Nome_Marca'
FROM
	DimProduct
GO

SELECT * FROM vwProdutos

DROP VIEW vwProdutos
	
-- B)

GO
ALTER VIEW vwFuncionarios AS
SELECT
	FirstName AS 'Nome', 
	BirthDate AS 'Data Aniversário',
	DepartmentName 'Nome do Departamento',
	Gender AS 'Sexo'
FROM
	DimEmployee
WHERE Gender = 'F'
GO

SELECT * FROM vwFuncionarios
DROP VIEW vwFuncionarios

-- C)

SELECT * FROM DimStore

GO
ALTER VIEW vwLojas AS

SELECT
	StoreKey, 
	StoreName,
	OpenDate,
	StoreType
FROM
	DimStore
WHERE Status = 'On'
GO

SELECT * FROM vwLojas

DROP VIEW vwLojas

/* 6. a) Crie uma View que seja o resultado de um agrupamento da tabela DimProduct. O
resultado esperado da consulta deverá ser o total de produtos por marca. Chame essa
View de vw_6a.
b) Altere a View criada no exercício anterior, adicionando o peso total por marca. Atenção:
sua View final deverá ter então 3 colunas: Nome da Marca, Total de Produtos e Peso Total.
c) Exclua a View vw_6a. */

-- A)

SELECT * FROM DimProduct

GO
CREATE VIEW vw_6a AS
SELECT 
	BrandName AS 'Marca', 
	COUNT(*) AS 'Total Produtos'
FROM 
	DimProduct
GROUP BY BrandName
GO

SELECT * FROM vw_6a
ORDER BY 'Total Produtos' DESC




-- B)

SELECT * FROM DimProduct
GO
ALTER VIEW vw_6a AS
SELECT
	BrandName AS 'nome Da Marca', 
	COUNT(*) AS 'Total De Produtos',
	SUM(Weight) AS 'Peso_Total'
FROM 
	DimProduct
GROUP BY BrandName
GO

SELECT * FROM vw_6a
ORDER BY 'Total De Produtos' DESC


-- C)

DROP VIEW vw_6a