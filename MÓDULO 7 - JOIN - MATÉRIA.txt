/*MÓDULO 7 - JOIN - POR QUE PRECISAMOS DO JOIN? - CHAVE PRIMÁRIA VS CHAVE ESTRANGEIRA - TABELA FATO VS TABELA DIMENSÃO - TIPOS DE JOIN - INNER JOIN
LEFT JOIN - RIGHT JOIN - FULL JOIN - CROSS JOIN - MÚLTIPLOS JOIN - UNION AND UNION ALL */


-- POR QUE PRECISAMOS DO JOIN?

SELECT TOP(1000) * FROM FactSales
SELECT * FROM DimChannel

-- Por que não se cria uma única tabela com todas as infos em vez de outras tabelas com ID's e outras infos, a fim de facilitar?
-- A busca se tornaria inviável dado o tamanho das tabelas.

-- CHAVE PRIMARIA VC CHAVE ESTRANGEIRA: COMO RELACIONAR TABELAS?

/* UMA CHAVE PRIMÁRIA É UMA COLUNA QUE IDENTIFICA AS INFORMAÇÕES DISTINTAS EM UMA TABELA. GERALMENTE, É UMA COLUNA DE ID.
UM CHAVE ESTRANGEIRA É UMA COLUNA QUE PERMITE  RELACIONAR AS LINHAS DE UMA SEGUNDA TABELA COM A CHAVE PRIMÁRIA DE UMA PRIMEIRA TABELA.

/* TABELA FATO VS TABELA DIMENSÃO: OS TIPOS DE TABELA - DIM - DIMENSÃO / FACT FATO - DIM = CARACTERÍSTICAS DE DETERMINADO ELEMENTO, COMO P. EX,
LOJA: EMAIL, QTD FUNCIONÁRIOS, PRODUTOS, ETC. NENHUM DOS ELEMENTOS PRINCIPAIS NESTA TABELA IRÁ SE REPETIR. É ONDE VAMOS ENCONTRAR AS CHAVES
PRIMÁRIAS. JÁ UMA TABELA FATO REGISTRA OS FATOS OU ACONTECIMENTOS DE UMA EMPRESA/NEGÓCIO EM DETERMINADOS PERÍODOS DE TEMPO (VENDAS, DEVOLUÇÕES,
ABERTURAS DE CHAMADOS, RECEITAS, DESPESAS, ETC). GERALMENTE É UM TABELA COM MILHARES DE INFORMAÇÕES E COMPOSTA ESSENCIALMENTE POR COLUNAS DE ID
USADAS PARA BUSCAR AS INFORMAÇÕES COMPLEMENTARES DE UMA TABELA DIMENSÃO, CONHECIDAS COMO CHAVES ESTRANGEIRAS. NÃO NECESSARIAMENTE UMA RELAÇÃO
ACONTECE ENTRE UMA TABELA DIM E FATO, POIS DUAS DIMENSÕES PODEM SE RELACIONAR. O QUE NÃO SE FAZ É UMA RELAÇÃO ENTRE DUAS TABELAS FATOS. */

-- TIPOS DE JOIN - RESUMO: LEFT OUTER JOIN - RIGHT OUTER JOIN - INNER JOIN - FULL OUTER JOIN - LEFT ANTI JOIN - RIGHT ANTI JOIN - FULL ANTI JOIN

-- LEFT OUTER JOIN OU LEFT JOIN
-- PERMITE JUNTAR INFOS DE DUAS TABELAS, TENDO UMA COLUNA EM COMUM QUE ALGUNS DADOS CORRESPONDEM ÀS DUAS TABELAS. ASSIM SENDO, ELE TRAZ TODAS AS
INFOS DA TABELA A (ESQUERDA) + INTERSEÇÃO DA TABELA B. AQUILO QUE NÃO FOR ENCONTRADO NA TABELA B, SERÁ VISUALIZADO COMO INFORMAÇÃO VAZIA (NULL).

RIGHT JOIN - OPOSTO DO LEFT. TRAZ TODOS OS DADOS DA TABELA B + A INTERSEÇÃO COMA TABELA A.

INNER JOIN - TRAZ SOMENTE AS INFOS QUE EXISTEM NAS DUAS TABELAS, ISTO É, A INTERSEÇÃO.

FULL OUTER JOIN OU FULL JOIN - TRAZ TODAS AS LINHAS DAS 2 TABELAS.

LEFT (ANTI) JOIN - TRAZ APENAS AS LINHAS DA TABELA A(ESQUERDA). TUDO AQUILO QUE SÓ TEM NA TABELA A.

RIGHT ANTI JOINT - APENAS AS LINHAS QUE APARECEM EM B(DIREITA). TUDO AQUILO QUE SÓ EXISTE NA TABELA B.

FULL ANTI JOIN - SOMENTE AS LINHAS UE SÓ APARECEM EM A E SÓ APARECEM EM B, ISTO É, SEM NENHUMA INTERSEÇÃO OU DADO QUE APARECE NAS DUAS TABELAS. */

-- EXEMPLO ESTRUTURA INNER JOIN:
/* SELECT
		TABELA_A.COLUNA1,
		TABELA_A.COLUNA2,
		TABELA_A.COLUNA3,
		TABELA_B.COLUNA4
	FROM
		TABELA_A
	INNER JOIN TABELA_B
		ON TABELA_A.ID_CHAVE_ESTRANGEIRA = TABELA_B.ID_CHAVE_PRIMARIA