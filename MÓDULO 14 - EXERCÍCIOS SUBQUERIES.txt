/* MÓDULO 14 - EXERCÍCIOS SUBQUERIES:

/* 1 - Para fins fiscais, a contabilidade da empresa precisa de uma tabela contendo todas as vendas referentes à loja 'Contoso Orlando Store'. Isso
porque essa loja encontra-se em uma região onde a tributaçao foi modificada recentemente. Portanto, crie uma consulta ao BD pra obter uma
tabela FactSales contendo todas as vendas desta loja. */

SELECT * FROM FactSales
WHERE StoreKey = (
		SELECT StoreKey FROM DimStore
		WHERE StoreName = 'Contoso Orlando Store'
		) 

/*2. O setor de controle de produtos quer fazer uma análise pra descobrir quais são os produtos que possuem um UnitPrice maior que o UnitPrice
do produto ID igual a 1893.
A) Sua consulta resultante deve conter as colunas ProductKey, ProductName e UnitPrice da Tabela DimProduct.
B) Nessa query você também deve retornar uma coluna extra que informe o UnitPrice do produto 1893.*/

/*2. O setor de controle de produtos quer fazer uma análise pra descobrir quais são os produtos que possuem um UnitPrice maior que o UnitPrice
do produto ID igual a 1893.
A) Sua consulta resultante deve conter as colunas ProductKey, ProductName e UnitPrice da Tabela DimProduct.
B) Nessa query você também deve retornar uma coluna extra que informe o UnitPrice do produto 1893. */

select * from DimProduct
where productkey = 1893 -- UnitPrice = 1989.00

SELECT
	ProductKey,
	ProductName,
	UnitPrice,
	(
				SELECT
					UnitPrice
				FROM DimProduct
				WHERE ProductKey = 1893
				) AS 'UnitPrice (ID 1893)'

FROM
	DimProduct
WHERE UnitPrice > (
				SELECT
					UnitPrice
				FROM DimProduct
				WHERE ProductKey = 1893
				)

/* 3. A empresa Contoso criou um programa de bonificação chamado "Todos por 1". Este programa consistia no seguinte: 1 funcionário seria escolhido
ao final do ano como o funcionário destaque, só que a bonificação seria recebida por todos da área daquele funcionário em particular. O objetivo
desse programa seria o de incentivar a colaboração coletiva entre os funcionários de uma mesma área. Desta forma, o funcionário destaque
beneficiaria não só  si, como também a todos os colegas de sua área.

Ao final do ano, o funcionário escolhido como destaque foi o Miguel Severino. Isso significa que todos os funcionários da área do Miguel
seriam beneficiados com o programa.

O seu objetivo é realizar uma consulta à tabela Dimemployee e retornar todos os funcionários da área vencedora para que o setor financeiro possa
realizar os pagamentos das bonificações. */

SELECT DepartmentName FROM DimEmployee
WHERE FirstName = 'Miguel' AND LastName = 'Severino' -- departamento de produção


SELECT 
	* 
FROM 
	DimEmployee
WHERE DepartmentName = (
				SELECT 
					DepartmentName 
				FROM 
					DimEmployee
				WHERE FirstName = 'Miguel' 
				AND 
				LastName = 'Severino' -- departamento de produção
)

/* 4. Faça uma query que retorne os clientes que recebem um salário anual acima da média. A sua query deve retornar as colunas CustomerKey,
FirstName, LastName, EmailAddress e YearlyIncome. Obs: considere penas os clientes que são Pessoas Físicas. */

SELECT * FROM DimCustomer

SELECT AVG(YearlyIncome) AS 'Média_Salarial_Anual' FROM DimCustomer
WHERE CustomerType = 'Person'


SELECT
	CustomerKey AS 'Id_Cliente',
	FirstName AS 'Nome',
	LastNAme AS 'Sobrenome',
	EmailAddress AS 'E-mail',
	YearlyIncome AS	'Renda_Anual'
FROM
	DimCustomer
WHERE YearlyIncome > (
		SELECT
			AVG(YearlyIncome)
		FROM
			DimCustomer
		WHERE CustomerType = 'Person'
		)
AND
CustomerType = 'Person'

/* 5. A ação de desconto da Asian Holiday Promotion foi uma das mais bem sucedidas da empresa. Agora, a Contoso quer entender um pouco sobre o
perfil dos clientes que compram produtos desta promoção. Seu trabalho é criar uma query que retorne a lista de clientes que compraram
nesta promoção. */

-- 1º passo - desobrir qual é o id da promoção Asian Holiday Promotion
SELECT * FROM DimPromotion
WHERE PromotionName = 'Asian Holiday Promotion'

-- 2º passo - descobrir os ID's dos clientes que compraram com essa promoção
SELECT
	CustomerKey
FROM
	FactOnlineSales
WHERE PromotionKey IN (
	SELECT PromotionKey FROM DimPromotion
	WHERE PromotionName = 'Asian Holiday Promotion')

-- 3º passo - Descobrir as informações desses clientes

SELECT
	*
FROM DimCustomer
WHERE CustomerKey IN (
				SELECT
					CustomerKey
				FROM
					FactOnlineSales
				WHERE PromotionKey IN (
							SELECT PromotionKEy FROM DimPromotion
							WHERE PromotionName = 'Asian Holiday Promotion')
				)

/* 6 A empresa implementou um programa de fidelização de clientes empresariais. Todos aqueles que comprarem mais de 3000 unidades de um mesmo
produto receberá descontos em outras compras. Você deverá descobrir as informações de CustomerKey e CompanyName destes clientes */

SELECT TOP(100)
	CustomerKey,
	CompanyName
FROM
	DimCustomer
WHERE CustomerKey IN(
			SELECT
				CustomerKey
			FROM
				FactOnlineSales
			GROUP BY CustomerKey, ProductKey
			HAVING COUNT(*) >= 3000
			)
/* 7 Você deverá criar uma consulta para o setor de vendas que mostre as seguintes colunas da tabela DimProduct: ProductKey, ProductName,
BrandName, UnitPrice, Média de UnitPrice */

SELECT
	ProductKey, 
	ProductName,
	BrandName, 
	UnitPrice,
	ROUND((SELECT AVG(UnitPrice) FROM DimProduct), 2) AS 'MÉDIA_UNITPRICE'
FROM
	DimProduct

/* 8 - Faça uma consulta para descobrir os seguintes indicadores dos seus produtos:
- maior qtd de produtos por marca
- menor qtd de produtos por marca
- média de produtos por marca */


SELECT
	MAX(Quantidade)AS 'Máximo',
	MIN(Quantidade) AS 'Mínimo',
	AVG(Quantidade) AS 'Média'
FROM (
	SELECT
		BrandName,
	COUNT(*) AS 'Quantidade'
	FROM
		DimProduct
	GROUP BY BrandName
	) AS T

/* 9 Crie uma CTE que seja o agrupamento da tabela DimProduct, armazenando o total de produtos por marca. Em seguida, faça um SELECT nesta CTE
descobrindo qual é a quantidade máxima de produtos para uma marca. Chame essa CTE de CTE_QTDProdutosPorMarca */


WITH CTE_QTDProdutosPorMarca AS (
    SELECT
        BrandName,
        COUNT(*) AS 'Quantidade'
    FROM
        DimProduct
    GROUP BY
        BrandName
)
SELECT MAX(Quantidade) FROM CTE_QTDProdutosPorMarca;

				

/* Crie duas Ctes:

(i) a primeira deve conter as colunas ProductKey, ProductName, ProductSubCategoryKey, BrandName e UnitPrice, da tabela DimProduct, mas apenas
os produtos da marca 'Adventure Works'. Chame essa CTE de CTE_ProdutosAdventureWorks.

(ii) a segunda deve conter as colunas ProductSubcategoryKey, ProductSubcategoryName, da tabela DimProductSubcategory, mas apenas para as
subcategorias 'Televisions' e 'Monitors'.

Chame essa CTE de CTE_CategoriaTelevisionsEMonitors.

Faça um Join entre as duas CTEs e o resultado deve ser uma query contendo todas as colunas das duas tabelas. Observe neste exemplo a diferença 
entre o LEFT JOIN e o INNER JOIN. */

-- COM INNER JOIN - SEM VALORES NULL

WITH CTE_ProdutosAdventureWorks AS (
    SELECT
        ProductKey,
        ProductName,
        ProductSubcategoryKey,
        BrandName,
        UnitPrice
    FROM
        DimProduct
    WHERE
        BrandName = 'Adventure Works'
), CTE_CategoriaTelevisionsEMonitors AS (
    SELECT
        ProductSubcategoryKey,
        ProductSubcategoryName
    FROM
        DimProductSubcategory
    WHERE
        ProductSubcategoryName IN ('Televisions', 'Monitors')
)


SELECT
    P.ProductKey,
    P.ProductName,
    P.ProductSubcategoryKey,
    P.BrandName,
    P.UnitPrice,
    C.ProductSubcategoryName
FROM
    CTE_ProdutosAdventureWorks AS P
INNER JOIN
    CTE_CategoriaTelevisionsEMonitors AS C ON P.ProductSubcategoryKey = C.ProductSubcategoryKey

-- COM LEFT JOIN - COM VALORES NULL

WITH CTE_ProdutosAdventureWorks AS (
    SELECT
        ProductKey,
        ProductName,
        ProductSubcategoryKey,
        BrandName,
        UnitPrice
    FROM
        DimProduct
    WHERE
        BrandName = 'Adventure Works'
), CTE_CategoriaTelevisionsEMonitors AS (
    SELECT
        ProductSubcategoryKey,
        ProductSubcategoryName
    FROM
        DimProductSubcategory
    WHERE
        ProductSubcategoryName IN ('Televisions', 'Monitors')
)


SELECT
    P.ProductKey,
    P.ProductName,
    P.ProductSubcategoryKey,
    P.BrandName,
    P.UnitPrice,
    C.ProductSubcategoryName
FROM
    CTE_ProdutosAdventureWorks AS P
LEFT JOIN
    CTE_CategoriaTelevisionsEMonitors AS C ON P.ProductSubcategoryKey = C.ProductSubcategoryKey